#!/usr/bin/env bash
# OctoPI generation script
# Helper script that runs in a Raspbian chroot to create the OctoPI distro
# Written by Guy Sheffer <guysoft at gmail dot com> and Gina Häußge <osd@foosel.net>
# GPL V3
########
set -x
set -e

export LC_ALL=C

source /common.sh

if [ -n "$OCTOPI_APTMIRROR" ]; 
then
    echo "Switching apt mirror in /etc/apt/sources.list to $OCTOPI_APTMIRROR"
    cp /etc/apt/sources.list /etc/apt/sources.list.backup
    sed -i "s@http://raspbian.raspberrypi.org/raspbian/@$OCTOPI_APTMIRROR@g" /etc/apt/sources.list
fi

WEBCAM_USER=webcam

### Script ####

unpack /filesystem/home/pi /home/pi pi
unpack /filesystem/home/root /root root
unpack /filesystem/boot /boot

## Maintanence Settings
if [ "$OCTOPI_CHANGE_ACCESS_SETTINGS" == "yes" ]
then
  echo -e "--- CHANGE DEVICE SSH ACCESS SETTINGS ---"
  sed -i -e "s@.*Port 22.*@Port $OCTOPI_SSH_PORT@g" /etc/ssh/sshd_config
  echo -e "$OCTOPI_PASSWD\n$OCTOPI_PASSWD" | passwd pi
  sudo sed -i -e "s@#dtparam=spi=on@dtparam=spi=on@g" /boot/config.txt
  echo "Enabling UART"
  echo "# Enable UART" >>/boot/config.txt
  echo "enable_uart=1" >>/boot/config.txt
fi

apt-get update

# in case we are building from a regular raspbian image instead of the lite one...
remove_extra=$(remove_if_installed scratch squeak-plugins-scratch squeak-vm wolfram-engine python-minecraftpi minecraft-pi sonic-pi oracle-java8-jdk bluej libreoffice-common libreoffice-core freepats greenfoot nodered)
echo "removing:" $remove_extra
apt-get remove -y --purge $remove_extra
apt-get autoremove -y

apt-get -y --force-yes install python3 python3-virtualenv python3-dev python3-pip git screen subversion cmake checkinstall avahi-daemon libavahi-compat-libdnssd1 libffi-dev libssl-dev ntp ntpdate

echo " - Reinstall iputils-ping"
apt-get install --reinstall iputils-ping

pushd /home/pi

  # build virtualenv
  sudo -u pi python3 -m virtualenv --python=python3 juice
  sudo -u pi /home/pi/juice/bin/pip install --upgrade pip
  sudo -u pi /home/pi/juice/bin/pip install --upgrade RPi.GPIO

  # OctoPrint & pyserial
  if [ "$OCTOPI_INCLUDE_JUICEBOX" == "yes" ]
  then
    echo "--- Cloning Scripts package from UTA-FabLab"
    sudo -u pi git clone https://$OCTOPI_GIT_FL_TOKEN:x-oauth-basic@$OCTOPI_SCRIPTS_GIT_PATH --branch=$OCTOPI_SCRIPTS_GIT_BRANCH fl_scripts
    echo "--- Copying device config to boot partition"
    cp /home/pi/fl_scripts/files/device.json /boot/device.json
    echo "--- Installing JuiceBox"
    bash ./fl_scripts/device_update -m
  fi
popd

#Make sure user pi has access to serial ports
usermod -a -G tty pi
usermod -a -G dialout pi
usermod -a -G gpio pi

# store octopi commit used to build this image
echo "$OCTOPI_COMMIT" > /etc/octopi_commit

# Keep legacy compatibility
ln -s /etc/custompios_buildbase /etc/octopi_buildbase

# allow pi user to run shutdown and service commands
echo "pi ALL=NOPASSWD: /sbin/shutdown" > /etc/sudoers.d/octoprint-shutdown
echo "pi ALL=NOPASSWD: /usr/sbin/service" > /etc/sudoers.d/octoprint-service

#make sure users don't run git with sudo, thus breaking permissions, by adding /root/bin to the
#default sudo path and placing a git wrapper script there that checks if it's run as root
sed -i "s@secure_path=\"@secure_path=\"/root/bin:@g" /etc/sudoers
chmod +x /root/bin/git

# add a longer welcome text to ~pi/.bashrc
echo "source /home/pi/scripts/welcome" >> /home/pi/.bashrc

#unpack root in the end, so etc file are not overwritten, might need to add two roots int he future
unpack /filesystem/root /

#####################################################################
### setup services

### Disable GUI at start
systemctl_if_exists disable lightdm.service || true

update-rc.d change_password defaults
update-rc.d change_hostname defaults
update-rc.d change_ip defaults


### OctoPrint

if [ "$OCTOPI_INCLUDE_JUICEBOX" == "yes" ]
then
  systemctl_if_exists enable juicebox.service
else
  # let's remove the configs for system services we don't need
  rm /etc/systemd/system/juicebox.service
fi

#cleanup
apt-get clean
apt-get autoremove -y

if [ -n "$OCTOPI_APTMIRROR" ]; 
then
    echo "Reverting /etc/apt/sources.list"
    mv /etc/apt/sources.list.backup /etc/apt/sources.list
fi
