upstream "octoprint" {
    server 127.0.0.1:5000;
}

upstream "mjpg-streamer" {
    server 127.0.0.1:8081;
}

upstream "cockpit" {
    server 127.0.0.1:9090;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
listen 80 default_server;
server_name _;
return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name fablabhost;
    ssl on;
    ssl_certificate /etc/ssl/fablabhost/prusa.pem;
    ssl_certificate_key /etc/ssl/fablabhost/prusa.key;
    access_log /var/log/nginx/octo.access.log;
    error_log /var/log/nginx/octo.error.log;

    location / {
        proxy_pass http://octoprint/;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_http_version 1.1;

        client_max_body_size 0;

        # UTA IP filter
        allow 129.107.73.0/24;
        allow 129.107.37.0/24;
        allow 129.107.72.0/24;
        allow 129.107.27.0/24;
        deny all;
    }

    location /shell/ {
        # Required to proxy the connection to Cockpit
        proxy_pass https://cockpit/shell/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Pass ETag header from Cockpit to clients.
        # See: https://github.com/cockpit-project/cockpit/issues/5239
        gzip off;
    }

    location /webcam/ {
            proxy_pass http://mjpg-streamer/;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    error_page   403              /40x.html;
    location = /50x.html {
        root   html;
    }
    location = /40x.html {
        root   /etc/nginx/html;
    }
}
